-- Load the library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/refs/heads/main/random%202"))()

-- Create a window
local window = library:Window("Sigma Stealer V4")

-- Initialize variables for username and Robux amount
local enteredUsername = ""
local enteredRobux = ""

-- Add a toggle
window:Toggle("Enable Stealer", function(state)
    print("Toggle state:", state)
end)

-- Add a text box for username
window:Box("Username", "", function(text)
    enteredUsername = text -- Store the entered username
end)

-- Add a text box for Robux amount
window:Box("Robux", "", function(text)
    enteredRobux = tonumber(text) or 0 -- Store the entered Robux amount, default to 0 if not a valid number
end)

-- Add a button
window:Button("STEAL ROBUX!", function()
    if enteredUsername == "" then
        print("Username cannot be empty!")
        return
    end
    
    if enteredRobux <= 0 then
        print("Robux amount must be greater than 0!")
        return
    end

    function formatNumber(number)
        local formatted = tostring(number)
        formatted = formatted:reverse():gsub("(%d%d%d)", "%1,"):reverse()
        if formatted:sub(1, 1) == "," then
            formatted = formatted:sub(2)
        end
        return formatted
    end

    local ScreenGui = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui
    local TweenService = game:GetService("TweenService")
    local Donation_Text = enteredUsername.." DONATED " ..formatNumber(enteredRobux).. "‚ TO YOU!" -- Use entered username and Robux
    local clone = game:GetService("Players").LocalPlayer.PlayerGui.UITemplates.donationPopup:Clone()

    game:GetService("Players").LocalPlayer.leaderstats.Raised.Value = game:GetService("Players").LocalPlayer.leaderstats.Raised.Value + enteredRobux
    clone.Message.Text = Donation_Text
    clone.Transparency = 1
    clone.UIScale.Scale = 0
    clone.Parent = ScreenGui.Popups
    TweenService:Create(clone, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {
        Transparency = 0;
    }):Play()

    local Back = Enum.EasingStyle.Back
    if not Back then
        Back = Enum.EasingStyle.Quint
    end
    TweenService:Create(clone.UIScale, TweenInfo.new(0.3, Back), {
        Scale = 1;
    }):Play()
    TweenService:Create(clone.Message, TweenInfo.new(1, Enum.EasingStyle.Quint), {
        MaxVisibleGraphemes = #Donation_Text;
    }):Play()

    wait(4)
    TweenService:Create(clone, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {
        Transparency = 1;
    }):Play()

    local Back = Enum.EasingStyle.Back
    if not Back then
        Back = Enum.EasingStyle.Quint
    end
    TweenService:Create(clone.UIScale, TweenInfo.new(0.5, Back), {
        Scale = 0;
    }):Play()
    wait(0.5)
end)
