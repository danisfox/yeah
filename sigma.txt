-- Load UI
local UI = loadstring(game:HttpGet'https://raw.githubusercontent.com/10x00/Tools/main/Super%20Hot%20Monke%20UI')()

UI.Title.Text = "üéÖüèª Pls Donate V4.2 | Updated 1/3/2025"

UI.newTab("Main")

UI.newCheckBox(UI.Main, "Enable Stealer", function(state)
    print("Enable Stealer:", state)
end)

-- Wait for the game to load
repeat wait() until game:IsLoaded()

-- Get the Players service
local Players = game:GetService("Players")

-- Variables to store selected player and robux amount
local selectedPlayer = nil
local robuxAmount = 10 -- Default robux amount

-- Function to get player names
local function GetPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Create dropdown with dynamic player names
local function CreatePlayerDropdown()
    UI.newDropDown(UI.Main, "Choose Player", GetPlayerNames(), function(selected)
        selectedPlayer = selected -- Store the selected player
        print("Selected player:", selected)
    end)
end

-- Initialize the dropdown
CreatePlayerDropdown()

UI.newSlider(UI.Main, "Robux to Steal", 10, 1000, function(value)
    robuxAmount = math.floor(value) -- Round down to the nearest whole number
    print("Robux to Steal:", robuxAmount)
end)


UI.newButton(UI.Main, "üí∞ Steal Robux!", function()
    if not selectedPlayer then
        warn("No player selected!")
        return
    end

    if not robuxAmount or robuxAmount <= 0 then
        warn("Invalid Robux amount!")
        return
    end

    -- Format the robux amount
    local function formatNumber(number)
        local formatted = tostring(number)
        formatted = formatted:reverse():gsub("(%d%d%d)", "%1,"):reverse()
        if formatted:sub(1, 1) == "," then
            formatted = formatted:sub(2)
        end
        return formatted
    end

    -- Notification logic
    local ScreenGui = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui
    local TweenService = game:GetService("TweenService")
    local Donation_Text = selectedPlayer .. " DONATED " .. formatNumber(robuxAmount) .. "ÓÄÇ‚Äö TO YOU!"
    local clone = game:GetService("Players").LocalPlayer.PlayerGui.UITemplates.donationPopup:Clone()

    -- Update leaderstats (if applicable)
    game:GetService("Players").LocalPlayer.leaderstats.Raised.Value = 
        game:GetService("Players").LocalPlayer.leaderstats.Raised.Value + robuxAmount

    -- Update and animate the popup
    clone.Message.Text = Donation_Text
    clone.Transparency = 1
    clone.UIScale.Scale = 0
    clone.Parent = ScreenGui.Popups

    TweenService:Create(clone, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {
        Transparency = 0;
    }):Play()

    TweenService:Create(clone.UIScale, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Scale = 1;
    }):Play()

    TweenService:Create(clone.Message, TweenInfo.new(1, Enum.EasingStyle.Quint), {
        MaxVisibleGraphemes = #Donation_Text;
    }):Play()

    wait(4)
    TweenService:Create(clone, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {
        Transparency = 1;
    }):Play()

    TweenService:Create(clone.UIScale, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        Scale = 0;
    }):Play()

    wait(0.5)
end)

UI.newHeader(UI.Main, "Settings")
UI.newLabel(UI.Main, "To be added in version 5.0!")
